#配置内容
global
    #工作目录
    #chroot /usr/local/etc/haproxy
    #日志文件，使用rsyslog服务中local5日志设备（/var/log/local5），等级info
    log 127.0.0.1 local5 info
    #守护进程运行
    daemon
defaults
    log     global
    mode    http
    #日志格式
    option  tcplog
    #日志中不记录负载均衡的心跳检测记录
    option  dontlognull
    #连接超时（毫秒）
    timeout connect 5000
    #客户端超时（毫秒）
    timeout client  50000
    #服务器超时（毫秒）
    timeout server  50000
	#每个进程可用的最大连接数
    maxconn 2000
	#使用keepalive检测死链
    option  tcpka
#监控界面   
listen haproxy-monitor
    #监控界面的访问的IP和端口
    bind  0.0.0.0:8888
    #访问协议
    mode  http
    #URI相对地址
    stats uri /haproxy
    #统计报告格式
    stats realm  Global\ statistics
    #登陆帐户信息
    stats auth  root:Pwd@123
	option httplog
#redis负载均衡-应用不使用该代理，主要用于监控集群
listen proxy-redis-cluster
	bind 0.0.0.0:6379
	mode tcp
	balance roundrobin
	option  tcplog
	server redis1 10.0.0.5:6371 weight 1 check inter 5000 rise 2 fall 3
	server redis2 10.0.0.5:6372 weight 1 check inter 5000 rise 2 fall 3
	server redis3 10.0.0.5:6373 weight 1 check inter 5000 rise 2 fall 3
	server redis4 10.0.0.5:6374 weight 1 check inter 5000 rise 2 fall 3
	server redis5 10.0.0.5:6375 weight 1 check inter 5000 rise 2 fall 3
	server redis6 10.0.0.5:6376 weight 1 check inter 5000 rise 2 fall 3
#rabbitmq负载均衡1-应用不使用该代理，主要用于监控集群
listen proxy-rabbit-cluster
	bind 0.0.0.0:5672
	mode tcp
	balance roundrobin
	server rabbit1 10.0.0.5:5672 weight 1 check inter 5000 rise 2 fall 3
	server rabbit2 10.0.0.5:6672 weight 1 check inter 5000 rise 2 fall 3
	server rabbit3 10.0.0.5:7672 weight 1 check inter 5000 rise 2 fall 3
#rabbitmq负载均衡2-应用不使用该代理，主要用于监控集群
listen proxy-rabbit-stomp
	bind 0.0.0.0:61613
	mode tcp
	balance roundrobin
	server stomp1 10.0.0.5:61613 weight 1 check inter 5000 rise 2 fall 3
	server stomp2 10.0.0.5:61614 weight 1 check inter 5000 rise 2 fall 3
	server stomp3 10.0.0.5:61615 weight 1 check inter 5000 rise 2 fall 3
#rabbitmq负载均衡3-用于外网登陆控制台
listen proxy-rabbit-portal
	bind 0.0.0.0:15672
	mode http
	balance roundrobin
	server portal1 10.0.0.5:15672 weight 1 check inter 5000 rise 2 fall 3
	server portal2 10.0.0.5:25672 weight 1 check inter 5000 rise 2 fall 3
	server portal3 10.0.0.5:35672 weight 1 check inter 5000 rise 2 fall 3
	option httplog
#zipkin负载均衡-应用统一通过该代理接入zipkin集群
listen proxy-zipkin-cluster
	bind 0.0.0.0:9411
	mode http
	balance leastconn
	server zipkin1 10.0.0.11:9411 weight 1 check inter 5000 rise 2 fall 3
	server zipkin2 10.0.0.11:9412 weight 1 check inter 5000 rise 2 fall 3
	server zipkin3 10.0.0.11:9413 weight 1 check inter 5000 rise 2 fall 3
	option httplog
#xxljobadmin负载均衡-一方面用于外网登陆控制台，另一方面应用统一通过该代理接入xxljob集群
listen proxy-xxljobadmin-cluster
	bind 0.0.0.0:1111
	mode http
	balance leastconn
	server xxl1 10.0.0.11:1111 weight 1 check inter 5000 rise 2 fall 3
	server xxl2 10.0.0.11:1112 weight 1 check inter 5000 rise 2 fall 3
	server xxl3 10.0.0.11:1113 weight 1 check inter 5000 rise 2 fall 3
	option httplog
#SPARTACUS-AUTU负载均衡-用于网关通过该代理接入认证/授权服务器的验签接口
listen proxy-auth-cluster
        bind 0.0.0.0:3001
        mode http
        balance leastconn
        server auth1 10.0.0.10:3001 weight 1 check inter 5000 rise 2 fall 3
        server auth2 10.0.0.4:3002 weight 1 check inter 5000 rise 2 fall 3
        server auth3 10.0.0.14:3003 weight 1 check inter 5000 rise 2 fall 3
        option httplog
#根据域名做负载均衡
#xauth.spartacus.run 认证/授权集群的代理，用于博客端的社交登陆（QQ/微信）
#tiyan.spartacus.run 网关集群的代理，博客端网址、管理端网址的访问前缀
frontend www
        bind *:80
        mode http
        acl is_xauth hdr_beg(host) -i xauth.spartacus.run
        acl is_tiyan hdr_beg(host) -i tiyan.spartacus.run
        use_backend auth_server if is_xauth
        use_backend gateway_server if is_tiyan
backend gateway_server
        mode http
        balance leastconn
        #下面两个配置可保证请求头(x-forwarded-for)中会传递用户的真实IP
        option http-server-close
        option forwardfor
        server gateway1 10.0.0.10:2001 weight 1 check inter 5000 rise 2 fall 3
        server gateway2 10.0.0.4:2002 weight 1 check inter 5000 rise 2 fall 3
        server gateway3 10.0.0.14:2003 weight 1 check inter 5000 rise 2 fall 3
backend auth_server
        mode http
        balance leastconn
        #下面两个配置可保证请求头(x-forwarded-for)中会传递用户的真实IP
        option http-server-close
        option forwardfor
        server auth1 10.0.0.10:3001 weight 1 check inter 5000 rise 2 fall 3
        server auth2 10.0.0.4:3002 weight 1 check inter 5000 rise 2 fall 3
        server auth3 10.0.0.14:3003 weight 1 check inter 5000 rise 2 fall 3
